{"version":3,"file":"static/js/503.959db8d1.chunk.js","mappings":"yLAMMA,EAAAA,WAAAA,SAAAA,KAAAA,EAAAA,EAAAA,GAAAA,KAAAA,EAAAA,CA2CJ,OA3CIA,EAAAA,EAAAA,GAAAA,EAAAA,KAAAA,CAAAA,CAAAA,IAAAA,wBAAAA,MAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,KAAAA,MACJ,WAAmCC,GAAnC,8FACyBC,EAAAA,EAAAA,YACrB,2BACAD,GAHJ,qBACUE,EADV,EACUA,MADV,uBAMIC,EAAAA,EAAAA,eAA4BD,EAAKE,SANrC,mBAOW,GAPX,8FADIL,IACJ,+EAWA,2GACyBE,EAAAA,EAAAA,WAAsB,+BAD/C,qBACUC,EADV,EACUA,MADV,uBAIIG,EAAAA,EAAAA,UAAeC,EAAAA,EAAAA,IAAgBJ,IAJnC,mBAKW,GALX,6FAXA,IAWA,4EASA,WAAmCK,GAAnC,8FACyBN,EAAAA,EAAAA,WACrB,2BAA6BM,GAFjC,qBACUL,EADV,EACUA,MADV,uBAKIG,EAAAA,EAAAA,UAAeG,EAAAA,EAAAA,IAAW,OAACN,QAAD,IAACA,OAAD,EAACA,EAAO,KALtC,mBAMW,GANX,8FATA,IASA,4EAUA,uGAAqCK,EAArC,EAAqCA,GAAIP,EAAzC,EAAyCA,SAAzC,SACyBC,EAAAA,EAAAA,cACrB,2BAA6BM,EAC7BP,GAHJ,qBACUE,EADV,EACUA,MADV,uBAOIC,EAAAA,EAAAA,eAA4BD,EAAKE,SAPrC,mBAQW,GARX,8FAVA,IAUA,4EAYA,WAAmCG,GAAnC,8FACyBN,EAAAA,EAAAA,cACrB,2BAA6BM,GAFjC,qBACUL,EADV,EACUA,MADV,uBAMIC,EAAAA,EAAAA,eAA4BD,EAAKE,SANrC,mBAOW,GAPX,8FAZA,MAYA,EA3CIL,GAuDN,K,yGCvDMU,EAAAA,WAAAA,SAAAA,KAAAA,EAAAA,EAAAA,GAAAA,KAAAA,EAAAA,CA4EJ,OA5EIA,EAAAA,EAAAA,GAAAA,EAAAA,KAAAA,CAAAA,CAAAA,IAAAA,oBAAAA,MAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,KAAAA,MACJ,WAA+BT,GAA/B,8FACyBC,EAAAA,EAAAA,YAAuB,mBAAoBD,GADpE,qBACUE,EADV,EACUA,MADV,uBAGIC,EAAAA,EAAAA,eAA4BD,EAAKE,SAHrC,mBAIW,GAJX,8FADIK,IACJ,2EAQA,2GACyBR,EAAAA,EAAAA,WAAsB,uBAD/C,qBACUC,EADV,EACUA,MADV,uBAGIG,EAAAA,EAAAA,UAAeK,EAAAA,EAAAA,IAAYR,IAH/B,mBAIW,GAJX,6FARA,IAQA,8EAQA,WAAqCS,GAArC,8FACyBV,EAAAA,EAAAA,WACrB,yBAA2BU,GAF/B,qBACUT,EADV,EACUA,MADV,uBAKIG,EAAAA,EAAAA,UAAeO,EAAAA,EAAAA,IAAO,OAACV,QAAD,IAACA,OAAD,EAACA,EAAO,KALlC,mBAMW,GANX,8FARA,IAQA,wEAUA,WAA+BK,GAA/B,8FACyBN,EAAAA,EAAAA,WAAsB,mBAAqBM,GADpE,qBACUL,EADV,EACUA,MADV,uBAIIG,EAAAA,EAAAA,UAAeO,EAAAA,EAAAA,IAAO,OAACV,QAAD,IAACA,OAAD,EAACA,EAAO,KAJlC,mBAKW,GALX,8FAVA,IAUA,uEASA,WAA8BS,GAA9B,8FACyBV,EAAAA,EAAAA,WACrB,yBAA2BU,GAF/B,qBACUT,EADV,EACUA,MADV,uBAMIG,EAAAA,EAAAA,UAAeO,EAAAA,EAAAA,IAAO,OAACV,QAAD,IAACA,OAAD,EAACA,EAAO,KANlC,mBAOW,GAPX,8FATA,IASA,wEAWA,WAA+BK,EAAIP,GAAnC,8FACyBC,EAAAA,EAAAA,cACrB,mBAAqBM,EACrBP,GAHJ,qBACUE,EADV,EACUA,MADV,uBAMIC,EAAAA,EAAAA,eAA4BD,EAAKE,SANrC,mBAOW,GAPX,gGAXA,IAWA,wEAWA,WAA+BG,GAA/B,8FACyBN,EAAAA,EAAAA,cAAyB,mBAAqBM,GADvE,qBACUL,EADV,EACUA,MADV,uBAIIC,EAAAA,EAAAA,eAA4BD,EAAKE,SAJrC,mBAKW,GALX,8FAXA,IAWA,sEASA,WAA6BG,GAA7B,8FACyBN,EAAAA,EAAAA,WAAsB,iBAAmBM,GADlE,qBACUL,EADV,EACUA,MADV,uBAIIC,EAAAA,EAAAA,eAA4BD,EAAKE,SAJrC,mBAKW,GALX,8FATA,IASA,yEASA,WAAgCG,GAAhC,8FACyBN,EAAAA,EAAAA,WAAsB,oBAAsBM,GADrE,qBACUL,EADV,EACUA,MADV,uBAIIC,EAAAA,EAAAA,eAA4BD,EAAKE,SAJrC,mBAKW,GALX,8FATA,MASA,EA5EIK,GAsFN,K,2HCyGA,UA3LiB,YACfI,EAAAA,EAAAA,YAAU,WACRJ,EAAAA,EAAAA,sBACD,GAAE,KAEHI,EAAAA,EAAAA,YAAU,WACRd,EAAAA,EAAAA,0BACD,GAAE,IAEH,IAAQe,GAAiBC,EAAAA,EAAAA,KAAY,SAACC,GAAD,cAAWA,QAAX,IAAWA,OAAX,EAAWA,EAAOC,QAAlB,IAA7BH,aACAI,GAAaH,EAAAA,EAAAA,KAAY,SAACC,GAAD,cAAWA,QAAX,IAAWA,OAAX,EAAWA,EAAOG,IAAlB,IAAzBD,SAiBR,OACE,8BACE,gBAAKE,UAAU,mDAAf,UACE,iBAAKA,UAAU,yBAAf,WACE,iBAAKA,UAAU,oCAAf,WACE,iBAAKA,UAAU,kBAAf,WACE,iBAAMA,UAAU,2BAAhB,oDAGA,eAAIA,UAAU,4DAAd,6BAIF,gBAAKA,UAAU,0BAAf,UACE,mBAEEA,UAAU,gJAFZ,kCASJ,iBAAKA,UAAU,4BAAf,WACE,iBAAKA,UAAU,wDAAf,WACE,eAAIA,UAAU,yCAAd,yBAGA,yBACe,OAAZN,QAAY,IAAZA,OAAA,EAAAA,EAAcO,SAAU,GACvB,eAAID,UAAU,sCAAd,+BADD,OAKCN,QALD,IAKCA,OALD,EAKCA,EAAcQ,KAAI,SAACL,GAAD,OAChB,yBACE,cAIEG,UAAU,oFAJZ,gBAMGH,QANH,IAMGA,OANH,EAMGA,EAAUM,QARC,UAexB,gBAAKH,UAAU,kCAAf,UACE,gBAAKA,UAAU,uBAAf,UACW,OAARF,QAAQ,IAARA,OAAA,EAAAA,EAAUG,SAAU,GACnB,eAAID,UAAU,sCAAd,2BADD,OAKCF,QALD,IAKCA,OALD,EAKCA,EAAUI,KAAI,SAACH,GAAD,2BACZ,iBAEEC,UAAU,4CAFZ,WAIE,iBAAKA,UAAU,2BAAf,WACE,cAAGI,KAAI,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAMM,cAAeC,OAAO,SAArC,UACE,gBACEN,UAAU,qCACVO,IAAG,OAAER,QAAF,IAAEA,OAAF,EAAEA,EAAMM,cACXG,IAAG,OAAET,QAAF,IAAEA,OAAF,EAAEA,EAAMR,UAIf,iBAAKS,UAAU,kEAAf,WACE,iBAAKA,UAAU,gEAAf,WACE,gBAAKA,UAAU,GAAf,UACE,SAAC,MAAD,CACES,QAAS,kBAzFrBtB,EAyFmC,OAACY,QAAD,IAACA,OAAD,EAACA,EAAMW,SAxF1DrB,EAAAA,EAAAA,gBAA4BF,GAAIwB,MAAK,SAACC,GAChCA,GACFvB,EAAAA,EAAAA,sBAEH,IALc,IAACF,CAyFqB,EACTa,UAAU,8CAGd,gBAAKA,UAAU,qBAAf,gBACGD,QADH,IACGA,GADH,UACGA,EAAMc,aADT,aACG,EAAaZ,aAIlB,iBAAKD,UAAU,iEAAf,WACE,0BACE,SAAC,MAAD,CACES,QAAS,kBA9FlBtB,EA8FmC,OAACY,QAAD,IAACA,OAAD,EAACA,EAAMW,SA7F7DrB,EAAAA,EAAAA,mBAA+BF,GAAIwB,MAAK,SAACC,GACnCA,GACFvB,EAAAA,EAAAA,sBAEH,IALiB,IAACF,CA8FkB,EACTa,UAAU,4CAGd,gBAAKA,UAAU,qBAAf,gBACGD,QADH,IACGA,GADH,UACGA,EAAMe,gBADT,aACG,EAAgBb,aAIrB,iBAAKD,UAAU,gEAAf,WACE,0BACE,SAAC,MAAD,CAAuBA,UAAU,8BAEnC,gBAAKA,UAAU,qBAAf,gBACGD,QADH,IACGA,OADH,EACGA,EAAMgB,oBAKf,iBAAKf,UAAU,wBAAf,WACE,SAAC,KAAD,CAAMgB,GAAE,OAAEjB,QAAF,IAAEA,OAAF,EAAEA,EAAMR,KAAMS,UAAU,kBAAhC,UACE,eAAIA,UAAU,sDAAd,gBACGD,QADH,IACGA,OADH,EACGA,EAAMkB,WAGX,eAAGjB,UAAU,gBAAb,iBACGD,QADH,IACGA,OADH,EACGA,EAAMmB,YAAYC,MAAM,EAAG,KAD9B,YAGA,SAAC,KAAD,CACEH,GAAE,wBAAYjB,QAAZ,IAAYA,OAAZ,EAAYA,EAAMR,MACpBS,UAAU,kCAFZ,0BAMA,iBAAKA,UAAU,yBAAf,WACE,gBAAKA,UAAU,gBAAf,UACE,SAAC,KAAD,CAAMgB,GAAG,IAAT,UACE,gBACEhB,UAAU,yBACVO,IAAG,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAMqB,YAAR,iBAAE,EAAa,UAAf,aAAE,EAAiBC,OACtBb,IAAI,UAIV,iBAAKR,UAAU,OAAf,WACE,cAAGA,UAAU,oCAAb,UACE,SAAC,KAAD,CACEgB,GAAE,0BAAcjB,QAAd,IAAcA,GAAd,UAAcA,EAAMqB,YAApB,iBAAc,EAAa,UAA3B,aAAc,EAAiBE,UACjCtB,UAAU,mCAFZ,gBAIGD,QAJH,IAIGA,GAJH,UAIGA,EAAMqB,YAJT,iBAIG,EAAa,UAJhB,aAIG,EAAiBE,cAGtB,iBAAKtB,UAAU,wCAAf,WACE,2BACE,SAAC,IAAD,CAAeuB,KAAI,OAAExB,QAAF,IAAEA,OAAF,EAAEA,EAAMyB,eAE7B,iBAAM,cAAY,OAAlB,gCArFHzB,EAAKW,IAFA,iBAsG/B,C,+DCxLD,IARsB,SAAC,GAAc,IAAZa,EAAW,EAAXA,KACvB,OACE,SAAC,IAAD,CAAQE,OAAO,aAAaC,WAAS,EAArC,SACGH,GAGN,C","sources":["APIRequest/CategoryRequest.js","APIRequest/PostRequest.js","components/PostList/PostList.jsx","utils/DateFormatter.js"],"sourcesContent":["//Internal Import\r\nimport store from \"../redux/store/store\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport RestClient from \"./RestClient\";\r\nimport { SetCategory, SetCategoryList } from \"../redux/slices/CategorySlice\";\r\n\r\nclass CategoryRequest {\r\n  static async createCategoryRequest(postBody) {\r\n    const { data } = await RestClient.postRequest(\r\n      \"/category/createCategory\",\r\n      postBody,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async selectAllCategoryRequest() {\r\n    const { data } = await RestClient.getRequest(\"/category/selectAllCategory\");\r\n\r\n    if (data) {\r\n      store.dispatch(SetCategoryList(data));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async selectCategoryRequest(id) {\r\n    const { data } = await RestClient.getRequest(\r\n      \"category/selectCategory/\" + id,\r\n    );\r\n    if (data) {\r\n      store.dispatch(SetCategory(data?.[0]));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async updateCategoryRequest({ id, postBody }) {\r\n    const { data } = await RestClient.updateRequest(\r\n      \"category/updateCategory/\" + id,\r\n      postBody,\r\n    );\r\n\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async deleteCategoryRequest(id) {\r\n    const { data } = await RestClient.deleteRequest(\r\n      \"category/deleteCategory/\" + id,\r\n    );\r\n\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nexport default CategoryRequest;\r\n","//Internal Import\r\nimport store from \"../redux/store/store\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport RestClient from \"./RestClient\";\r\nimport { SetPost, SetPostList } from \"../redux/slices/PostSlice\";\r\n\r\nclass PostRequest {\r\n  static async createPostRequest(postBody) {\r\n    const { data } = await RestClient.postRequest(\"/post/createPost\", postBody);\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async selectAllPostRequest() {\r\n    const { data } = await RestClient.getRequest(\"/post/selectAllPost\");\r\n    if (data) {\r\n      store.dispatch(SetPostList(data));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async selectPostRequestBySlug(slug) {\r\n    const { data } = await RestClient.getRequest(\r\n      \"post/selectPostBySlug/\" + slug,\r\n    );\r\n    if (data) {\r\n      store.dispatch(SetPost(data?.[0]));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async selectPostRequest(id) {\r\n    const { data } = await RestClient.getRequest(\"post/selectPost/\" + id);\r\n\r\n    if (data) {\r\n      store.dispatch(SetPost(data?.[0]));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async selectPostBySlug(slug) {\r\n    const { data } = await RestClient.getRequest(\r\n      \"post/selectPostBySlug/\" + slug,\r\n    );\r\n\r\n    if (data) {\r\n      store.dispatch(SetPost(data?.[0]));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async updatePostRequest(id, postBody) {\r\n    const { data } = await RestClient.updateRequest(\r\n      \"Post/updatePost/\" + id,\r\n      postBody,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async deletePostRequest(id) {\r\n    const { data } = await RestClient.deleteRequest(\"post/deletePost/\" + id);\r\n\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async likePostRequest(id) {\r\n    const { data } = await RestClient.putRequest(\"post/likePost/\" + id);\r\n\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async disLikePostRequest(id) {\r\n    const { data } = await RestClient.putRequest(\"post/disLikePost/\" + id);\r\n\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nexport default PostRequest;\r\n","import { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { HiOutlineThumbUp, HiOutlineThumbDown } from \"react-icons/hi\";\r\nimport { AiOutlineEyeInvisible } from \"react-icons/ai\";\r\n\r\nimport DateFormatter from \"../../utils/DateFormatter\";\r\nimport PostRequest from \"../../APIRequest/PostRequest\";\r\nimport CategoryRequest from \"../../APIRequest/CategoryRequest\";\r\n\r\nconst PostList = () => {\r\n  useEffect(() => {\r\n    PostRequest.selectAllPostRequest();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    CategoryRequest.selectAllCategoryRequest();\r\n  }, []);\r\n\r\n  const { CategoryList } = useSelector((state) => state?.Category);\r\n  const { PostList } = useSelector((state) => state?.Post);\r\n\r\n  const likePost = (id) => {\r\n    PostRequest.likePostRequest(id).then((result) => {\r\n      if (result) {\r\n        PostRequest.selectAllPostRequest();\r\n      }\r\n    });\r\n  };\r\n  const disLikePost = (id) => {\r\n    PostRequest.disLikePostRequest(id).then((result) => {\r\n      if (result) {\r\n        PostRequest.selectAllPostRequest();\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"py-20 bg-gray-900 min-h-screen radius-for-skewed\">\r\n        <div className=\"container mx-auto px-4\">\r\n          <div className=\"mb-16 flex flex-wrap items-center\">\r\n            <div className=\"w-full lg:w-1/2\">\r\n              <span className=\"text-green-600 font-bold\">\r\n                Latest Posts from our awesome authors\r\n              </span>\r\n              <h2 className=\"text-4xl text-gray-300 lg:text-5xl font-bold font-heading\">\r\n                Latest Post\r\n              </h2>\r\n            </div>\r\n            <div className=\" block text-right w-1/2\">\r\n              <button\r\n                // onClick={() => dispatch(selectAllPostAction(\"\"))}\r\n                className=\"inline-block py-2 px-6 rounded-l-xl rounded-t-xl bg-green-600 hover:bg-green-700 text-gray-50 font-bold leading-loose transition duration-200\"\r\n              >\r\n                View All Posts\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex flex-wrap -mx-[1rem]\">\r\n            <div className=\"py-4 px-6 bg-gray-600 shadow rounded w-[25%] p-[1rem]\">\r\n              <h4 className=\"mb-4 text-gray-500 font-bold uppercase\">\r\n                Categories\r\n              </h4>\r\n              <ul>\r\n                {CategoryList?.length <= 0 ? (\r\n                  <h1 className=\"text-yellow-400 text-lg text-center\">\r\n                    No Category Found\r\n                  </h1>\r\n                ) : (\r\n                  CategoryList?.map((Category) => (\r\n                    <li>\r\n                      <p\r\n                        // onClick={() =>\r\n                        //   dispatch(fetchPostsAction(Category?.title))\r\n                        // }\r\n                        className=\"block cursor-pointer py-2 px-3 mb-4 rounded text-yellow-500 font-bold bg-gray-500\"\r\n                      >\r\n                        {Category?.name}\r\n                      </p>\r\n                    </li>\r\n                  ))\r\n                )}\r\n              </ul>\r\n            </div>\r\n            <div className=\"flex flex-wrap w-[75%] p-[1rem]\">\r\n              <div className=\"w-full lg:w-3/4 px-3\">\r\n                {PostList?.length <= 0 ? (\r\n                  <h1 className=\"text-yellow-400 text-lg text-center\">\r\n                    No Post Found\r\n                  </h1>\r\n                ) : (\r\n                  PostList?.map((Post) => (\r\n                    <div\r\n                      key={Post._id}\r\n                      className=\"flex flex-wrap bg-gray-900 -mx-3  lg:mb-6\"\r\n                    >\r\n                      <div className=\"mb-10  w-full lg:w-4/12 \">\r\n                        <a href={Post?.postThumbnail} target=\"_blank\">\r\n                          <img\r\n                            className=\"w-full h-full object-cover rounded\"\r\n                            src={Post?.postThumbnail}\r\n                            alt={Post?.slug}\r\n                          />\r\n                        </a>\r\n\r\n                        <div className=\"flex flex-row bg-gray-300  justify-center w-full  items-center \">\r\n                          <div className=\"flex flex-row justify-center items-center ml-4 mr-4 pb-2 pt-1\">\r\n                            <div className=\"\">\r\n                              <HiOutlineThumbUp\r\n                                onClick={() => likePost(Post?._id)}\r\n                                className=\"h-7 w-7 text-indigo-600 cursor-pointer\"\r\n                              />\r\n                            </div>\r\n                            <div className=\"pl-2 text-gray-600\">\r\n                              {Post?.likes?.length}\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"flex flex-row  justify-center items-center ml-4 mr-4 pb-2 pt-1\">\r\n                            <div>\r\n                              <HiOutlineThumbDown\r\n                                onClick={() => disLikePost(Post?._id)}\r\n                                className=\"h-7 w-7 cursor-pointer text-gray-600\"\r\n                              />\r\n                            </div>\r\n                            <div className=\"pl-2 text-gray-600\">\r\n                              {Post?.disLikes?.length}\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"flex flex-row justify-center items-center ml-4 mr-4 pb-2 pt-1\">\r\n                            <div>\r\n                              <AiOutlineEyeInvisible className=\"h-7 w-7  text-gray-400\" />\r\n                            </div>\r\n                            <div className=\"pl-2 text-gray-600\">\r\n                              {Post?.numView}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"w-full lg:w-7/12 px-3\">\r\n                        <Link to={Post?.slug} className=\"hover:underline\">\r\n                          <h3 className=\"mb-1 text-2xl text-green-400 font-bold font-heading\">\r\n                            {Post?.title}\r\n                          </h3>\r\n                        </Link>\r\n                        <p className=\"text-gray-300\">\r\n                          {Post?.description.slice(0, 150)} ....\r\n                        </p>\r\n                        <Link\r\n                          to={`/posts/${Post?.slug}`}\r\n                          className=\"text-indigo-500 hover:underline\"\r\n                        >\r\n                          Read More..\r\n                        </Link>\r\n                        <div className=\"mt-6 flex items-center\">\r\n                          <div className=\"flex-shrink-0\">\r\n                            <Link to=\"/\">\r\n                              <img\r\n                                className=\"h-10 w-10 rounded-full\"\r\n                                src={Post?.user?.[0]?.avatar}\r\n                                alt=\"\"\r\n                              />\r\n                            </Link>\r\n                          </div>\r\n                          <div className=\"ml-3\">\r\n                            <p className=\"text-sm font-medium text-gray-900\">\r\n                              <Link\r\n                                to={`/profile/${Post?.user?.[0]?.userName}`}\r\n                                className=\"text-yellow-400 hover:underline \"\r\n                              >\r\n                                {Post?.user?.[0]?.userName}\r\n                              </Link>\r\n                            </p>\r\n                            <div className=\"flex space-x-1 text-sm text-green-500\">\r\n                              <time>\r\n                                <DateFormatter date={Post?.createdAt} />\r\n                              </time>\r\n                              <span aria-hidden=\"true\">&middot;</span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n","import React from \"react\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst DateFormatter = ({ date }) => {\r\n  return (\r\n    <Moment format=\"D MMM YYYY\" withTitle>\r\n      {date}\r\n    </Moment>\r\n  );\r\n};\r\n\r\nexport default DateFormatter;\r\n"],"names":["CategoryRequest","postBody","RestClient","data","ToastMessage","message","store","SetCategoryList","id","SetCategory","PostRequest","SetPostList","slug","SetPost","useEffect","CategoryList","useSelector","state","Category","PostList","Post","className","length","map","name","href","postThumbnail","target","src","alt","onClick","_id","then","result","likes","disLikes","numView","to","title","description","slice","user","avatar","userName","date","createdAt","format","withTitle"],"sourceRoot":""}