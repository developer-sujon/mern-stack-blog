{"version":3,"file":"static/js/487.23f5c6b6.chunk.js","mappings":"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","sources":["APIRequest/PostRequest.js","components/PostDetails/PostDetails.jsx","utils/DateFormatter.js"],"sourcesContent":["//Internal Import\r\nimport store from \"../redux/store/store\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport RestClient from \"./RestClient\";\r\nimport { SetPost, SetPostList } from \"../redux/slices/PostSlice\";\r\n\r\nclass PostRequest {\r\n  static async createPostRequest(postBody) {\r\n    const { data } = await RestClient.postRequest(\"/post/createPost\", postBody);\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async selectAllPostRequest() {\r\n    const { data } = await RestClient.getRequest(\"/post/selectAllPost\");\r\n    if (data) {\r\n      store.dispatch(SetPostList(data));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async selectPostRequestBySlug(slug) {\r\n    const { data } = await RestClient.getRequest(\r\n      \"post/selectPostBySlug/\" + slug,\r\n    );\r\n    if (data) {\r\n      store.dispatch(SetPost(data?.[0]));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async selectPostRequest(id) {\r\n    const { data } = await RestClient.getRequest(\"post/selectPost/\" + id);\r\n\r\n    if (data) {\r\n      store.dispatch(SetPost(data?.[0]));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async selectPostBySlug(slug) {\r\n    const { data } = await RestClient.getRequest(\r\n      \"post/selectPostBySlug/\" + slug,\r\n    );\r\n\r\n    if (data) {\r\n      store.dispatch(SetPost(data?.[0]));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async updatePostRequest(id, postBody) {\r\n    const { data } = await RestClient.updateRequest(\r\n      \"Post/updatePost/\" + id,\r\n      postBody,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async deletePostRequest(id) {\r\n    const { data } = await RestClient.deleteRequest(\"post/deletePost/\" + id);\r\n\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async likePostRequest(id) {\r\n    const { data } = await RestClient.putRequest(\"post/likePost/\" + id);\r\n\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async disLikePostRequest(id) {\r\n    const { data } = await RestClient.putRequest(\"post/disLikePost/\" + id);\r\n\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nexport default PostRequest;\r\n","//External Import\r\nimport React, { useEffect } from \"react\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { BsPencil, BsTrash } from \"react-icons/bs\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n//Internal Import\r\nimport DateFormatter from \"../../utils/DateFormatter\";\r\nimport PostRequest from \"../../APIRequest/PostRequest\";\r\n\r\nconst PostDetails = () => {\r\n  const navigate = useNavigate();\r\n  const { slug } = useParams();\r\n  const { Post } = useSelector((state) => state?.Post);\r\n\r\n  useEffect(() => {\r\n    PostRequest.selectPostBySlug(slug);\r\n  }, [slug]);\r\n\r\n  //Get login user\r\n  const { UserDetails } = useSelector((state) => state.User);\r\n\r\n  const isCreatedBy = Post?.user?.[0]?._id === UserDetails?._id;\r\n  const deletepost = (id) => {\r\n    PostRequest.deletePostRequest(id).then((result) => {\r\n      result && navigate(\"/posts\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\r\n        <section className=\"py-20 2xl:py-40 bg-gray-800 overflow-hidden\">\r\n          <div className=\"container px-4 mx-auto\">\r\n            <img\r\n              className=\"mb-24 w-full h-96 object-cover\"\r\n              src={Post?.postThumbnail}\r\n              alt={Post?.slug}\r\n            />\r\n            <div className=\"max-w-2xl mx-auto text-center\">\r\n              <h2 className=\"mt-7 mb-14 text-6xl 2xl:text-7xl text-white font-bold font-heading\">\r\n                {Post?.title}\r\n              </h2>\r\n\r\n              <div className=\"inline-flex pt-14 mb-14 items-center border-t border-gray-500\">\r\n                <img\r\n                  className=\"mr-8 w-20 lg:w-24 h-20 lg:h-24 rounded-full\"\r\n                  src={Post?.user?.[0]?.avatar}\r\n                  alt=\"\"\r\n                />\r\n                <div className=\"text-left\">\r\n                  <h4 className=\"mb-1 text-2xl font-bold text-gray-50\">\r\n                    <span className=\"text-xl lg:text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-br from-yellow-200 to-orange-600\">\r\n                      {Post?.user?.[0]?.userName}\r\n                    </span>\r\n                  </h4>\r\n                  <p className=\"text-gray-500\">\r\n                    {<DateFormatter date={Post?.createdAt} />}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div class=\"max-w-xl mx-auto\">\r\n                <p class=\"mb-6 text-left  text-xl text-gray-200\">\r\n                  {Post?.description}\r\n                  {isCreatedBy ? (\r\n                    <p class=\"flex\">\r\n                      <Link to={`/edit-post/${Post?._id}`} class=\"p-3\">\r\n                        <BsPencil class=\"h-8 mt-3 text-yellow-300\" />\r\n                      </Link>\r\n                      <button\r\n                        onClick={() => deletepost(Post?._id)}\r\n                        class=\"ml-3\"\r\n                      >\r\n                        <BsTrash class=\"h-8 mt-3 text-red-600\" />\r\n                      </button>\r\n                    </p>\r\n                  ) : null}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Add comment Form component here */}\r\n        </section>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostDetails;\r\n","import React from \"react\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst DateFormatter = ({ date }) => {\r\n  return (\r\n    <Moment format=\"D MMM YYYY\" withTitle>\r\n      {date}\r\n    </Moment>\r\n  );\r\n};\r\n\r\nexport default DateFormatter;\r\n"],"names":["PostRequest","postBody","RestClient","data","ToastMessage","message","store","SetPostList","slug","SetPost","id","navigate","useNavigate","useParams","Post","useSelector","state","useEffect","UserDetails","User","isCreatedBy","user","_id","className","src","postThumbnail","alt","title","avatar","userName","date","createdAt","class","description","to","onClick","then","result","format","withTitle"],"sourceRoot":""}