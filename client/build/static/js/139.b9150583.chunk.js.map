{"version":3,"file":"static/js/139.b9150583.chunk.js","mappings":"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","sources":["APIRequest/CategoryRequest.js","components/EditCategory/EditCategory.jsx"],"sourcesContent":["//Internal Import\r\nimport store from \"../redux/store/store\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport RestClient from \"./RestClient\";\r\nimport { SetCategory, SetCategoryList } from \"../redux/slices/CategorySlice\";\r\n\r\nclass CategoryRequest {\r\n  static async createCategoryRequest(postBody) {\r\n    const { data } = await RestClient.postRequest(\r\n      \"/category/createCategory\",\r\n      postBody,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async selectAllCategoryRequest() {\r\n    const { data } = await RestClient.getRequest(\"/category/selectAllCategory\");\r\n\r\n    if (data) {\r\n      store.dispatch(SetCategoryList(data));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async selectCategoryRequest(id) {\r\n    const { data } = await RestClient.getRequest(\r\n      \"category/selectCategory/\" + id,\r\n    );\r\n    if (data) {\r\n      store.dispatch(SetCategory(data?.[0]));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async updateCategoryRequest({ id, postBody }) {\r\n    const { data } = await RestClient.updateRequest(\r\n      \"category/updateCategory/\" + id,\r\n      postBody,\r\n    );\r\n\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async deleteCategoryRequest(id) {\r\n    const { data } = await RestClient.deleteRequest(\r\n      \"category/deleteCategory/\" + id,\r\n    );\r\n\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nexport default CategoryRequest;\r\n","//External import\r\nimport { useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { BsBookmarkCheck } from \"react-icons/bs\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n//Internal Imports\r\nimport CategoryRequest from \"../../APIRequest/CategoryRequest\";\r\n\r\nconst EditCategory = () => {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    CategoryRequest.selectCategoryRequest(id);\r\n  }, [id]);\r\n\r\n  const { Category } = useSelector((state) => state.Category);\r\n\r\n  const CategorySchema = yup.object().shape({\r\n    name: yup.string().required(\"Category Name is required\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      name: Category?.name,\r\n    },\r\n    onSubmit: (values) => {\r\n      CategoryRequest.updateCategoryRequest({ id, postBody: values }).then(\r\n        (result) => {\r\n          result && navigate(\"/Category-list\");\r\n        },\r\n      );\r\n    },\r\n    validationSchema: CategorySchema,\r\n  });\r\n\r\n  const removeCategory = (id) => {\r\n    CategoryRequest.deleteCategoryRequest(id).then((result) => {\r\n      result && navigate(\"/Category-list\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"max-w-md w-full space-y-8\">\r\n          <div>\r\n            <BsBookmarkCheck className=\"mx-auto h-12 w-auto\" />\r\n            <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n              Update Category\r\n            </h2>\r\n            <p className=\"mt-2 text-center text-sm text-gray-600\">\r\n              <p className=\"font-medium text-indigo-600 hover:text-indigo-500\">\r\n                These are the categories user will select when creating a post\r\n              </p>\r\n            </p>\r\n          </div>\r\n\r\n          <form className=\"mt-8 space-y-6\" onSubmit={formik.handleSubmit}>\r\n            <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\r\n            <div className=\"rounded-md shadow-sm -space-y-px\">\r\n              <div>\r\n                <label htmlFor=\"name\" className=\"sr-only\">\r\n                  Name\r\n                </label>\r\n\r\n                <input\r\n                  value={formik.values.name}\r\n                  onChange={formik.handleChange(\"name\")}\r\n                  onBlur={formik.handleBlur(\"name\")}\r\n                  type=\"text\"\r\n                  autoComplete=\"text\"\r\n                  className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 text-center focus:z-10 sm:text-sm\"\r\n                  placeholder=\"Update Category\"\r\n                />\r\n                <div className=\"text-red-400 mb-2\">\r\n                  {formik.touched.name && formik.errors.name}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <div>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                >\r\n                  Update Category\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <button\r\n            onClick={() => removeCategory(id)}\r\n            className=\"group relative w-full flex justify-center my-5 py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-red-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n          >\r\n            Delete Category\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditCategory;\r\n"],"names":["CategoryRequest","postBody","RestClient","data","ToastMessage","message","store","SetCategoryList","id","SetCategory","navigate","useNavigate","useParams","useEffect","Category","useSelector","state","CategorySchema","yup","shape","name","required","formik","useFormik","enableReinitialize","initialValues","onSubmit","values","then","result","validationSchema","className","handleSubmit","type","defaultValue","htmlFor","value","onChange","handleChange","onBlur","handleBlur","autoComplete","placeholder","touched","errors","onClick","removeCategory"],"sourceRoot":""}