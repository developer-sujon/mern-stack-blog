{"version":3,"file":"static/js/541.8739b00d.chunk.js","mappings":"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","sources":["APIRequest/TagRequest.js","components/TagList/TagList.jsx"],"sourcesContent":["//Internal Import\r\nimport store from \"../redux/store/store\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport RestClient from \"./RestClient\";\r\nimport { SetTag, SetTagList } from \"../redux/slices/TagSlice\";\r\n\r\nclass TagRequest {\r\n  static async createTagRequest(postBody) {\r\n    const { data } = await RestClient.postRequest(\"/tag/createTag\", postBody);\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async selectAllTagRequest(postBody) {\r\n    const { data } = await RestClient.getRequest(\"/tag/selectAllTag\");\r\n    if (data) {\r\n      store.dispatch(SetTagList(data));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async selectTagRequest(id) {\r\n    const { data } = await RestClient.getRequest(\"tag/selectTag/\" + id);\r\n    if (data) {\r\n      store.dispatch(SetTag(data?.[0]));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async updateTagRequest({ id, postBody }) {\r\n    const { data } = await RestClient.updateRequest(\r\n      \"Tag/updateTag/\" + id,\r\n      postBody,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async deleteTagRequest(id) {\r\n    const { data } = await RestClient.deleteRequest(\"tag/deleteTag/\" + id);\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nexport default TagRequest;\r\n","import { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { BsPencil } from \"react-icons/bs\";\r\nimport TagRequest from \"../../APIRequest/TagRequest\";\r\n\r\nconst TagList = () => {\r\n  useEffect(() => {\r\n    TagRequest.selectAllTagRequest();\r\n  }, []);\r\n\r\n  const { TagList } = useSelector((state) => state?.Tag);\r\n\r\n  return (\r\n    <div className=\"w-full max-w-screen-xl mx-auto mt-5\">\r\n      {TagList?.length <= 0 ? (\r\n        <h2 className=\"text-center text-3xl text-green-800\">\r\n          No category Found\r\n        </h2>\r\n      ) : (\r\n        <div className=\"flex flex-col\">\r\n          <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\r\n            <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\r\n              <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\r\n                <table className=\"min-w-full divide-y divide-gray-200\">\r\n                  <thead className=\"bg-gray-50\">\r\n                    <tr>\r\n                      <th\r\n                        scope=\"col\"\r\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                      >\r\n                        Author\r\n                      </th>\r\n                      <th\r\n                        scope=\"col\"\r\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                      >\r\n                        Title\r\n                      </th>\r\n                      <th\r\n                        scope=\"col\"\r\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                      >\r\n                        Created At\r\n                      </th>\r\n                      <th\r\n                        scope=\"col\"\r\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                      >\r\n                        Edit\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {TagList?.map((Tag) => (\r\n                      <tr className=\"bg-gray-50\" key={Tag._id}>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <div className=\"flex items-center\">\r\n                            <div className=\"flex-shrink-0 h-10 w-10\">\r\n                              <img\r\n                                className=\"h-10 w-10 rounded-full\"\r\n                                src={Tag?.user[0]?.avatar}\r\n                                alt=\"Tag profile\"\r\n                              />\r\n                            </div>\r\n                            <div className=\"ml-4\">\r\n                              <div className=\"text-sm font-medium text-gray-900\">\r\n                                {Tag?.user[0]?.userName}\r\n                              </div>\r\n                              <div className=\"text-sm text-gray-500\">\r\n                                {Tag?.user[0]?.email}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 capitalize\">\r\n                          {Tag.name}\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                          {new Date(Tag?.createdAt).toDateString()}\r\n                        </td>\r\n                        <Link to={`/edit-tag/${Tag._id}`}>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                            <BsPencil className=\"h-5 text-indigo-500\" />\r\n                          </td>\r\n                        </Link>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagList;\r\n"],"names":["TagRequest","postBody","RestClient","data","ToastMessage","message","store","SetTagList","id","SetTag","useEffect","TagList","useSelector","state","Tag","className","length","scope","map","src","user","avatar","alt","userName","email","name","Date","createdAt","toDateString","to","_id"],"sourceRoot":""}